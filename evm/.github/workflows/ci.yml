name: Foundry CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  FOUNDRY_PROFILE: ci
  FOUNDRY_FUZZ_RUNS: 1000

jobs:
  check:
    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Slither
        run: |
          pip install slither-analyzer

      - name: Cache Foundry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.foundry/cache
            ~/.foundry/rpc-cache
            out/
            cache/
          key: ${{ runner.os }}-foundry-${{ hashFiles('**/foundry.toml') }}
          restore-keys: |
            ${{ runner.os }}-foundry-

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

      - name: Run Forge coverage
        run: |
          forge coverage --report lcov
        id: coverage

      - name: Run Slither
        run: |
          slither . --exclude-dependencies
        id: slither

      - name: Run Forge format check
        run: |
          forge fmt --check
        id: format

      - name: Run Forge snapshot
        run: |
          forge snapshot --check
        id: snapshot

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          fail_ci_if_error: true

      - name: Check contract sizes
        run: |
          forge build --sizes
          forge build --sizes | awk '/â”ƒ/ && $4 != "Size" {gsub(/kB/,"",$4); if($4>24) exit 1}'
